version: '3.5'
services:
  web-auth:
    container_name: web-auth
    hostname: web-auth
    build: ./docker/web
    env_file:
      - .env
    volumes:
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      - ./src:/src:delegated
    networks:
      - reddis
      - default
    ports:
      - '8081:80'
    entrypoint: [ "nginx", "-g", "daemon off;" ]

  php-auth-server:
    container_name: php-auth-server
    hostname: php-auth-server
    build: .
    environment:
      - PHP_ENABLE_XDEBUG=1
      - XDEBUG_CONFIG="serverName=web-auth.work remote_enable=1 remote_mode=req remote_port=9000 remote_host=172.17.0.1 idekey=PHPSTORM"
    env_file:
      - .env
    volumes:
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      - ./src:/src:delegated
    networks:
      - reddis
      - default
    ports:
      - '9005:9000'
    entrypoint: [ "php-fpm", "-g", "daemon off;" ]

  mysql-auth-server:
    image: percona
    container_name: 'mysql-auth-server'
    hostname: 'mysql-auth-server'
    networks:
      - reddis
      - default
    ports:
      - '3308:3306'
    environment:
      MYSQL_USER: percona
      MYSQL_PASSWORD: qwqwqw
      MYSQL_ROOT_PASSWORD: qwqwqw
    volumes:
      - ./docker/mysql/data:/var/lib/mysql

  redis-master:
    image: 'bitnami/redis:latest'
    hostname: redis-master
    container_name: redis-master
    networks:
      - reddis
      - default
    ports:
      - '127.0.0.1:16379:6379'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_REPLICATION_MODE=master
#      - REDIS_PASSWORD=bitnami
    volumes:
      - 'redis:/opt/bitnami/redis/etc/'

  redis-replica:
    image: 'bitnami/redis:latest'
    hostname: redis-replica
    networks:
      - reddis
      - default
    ports:
      - '6379'
    links:
      - redis-master
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_REPLICATION_MODE=slave
      - REDIS_MASTER_HOST=redis-master
#      - REDIS_MASTER_PASSWORD=bitnami
#      - REDIS_PASSWORD=bitnami

  redis-sentinel:
    hostname: sentinel
    image: 'bitnami/redis-sentinel:latest'
    networks:
      - reddis
      - default
    ports:
      - '127.0.0.1:26379-26381:26379'
    links:
      - redis-master
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
#      - REDIS_SENTINEL_RESOLVE_HOSTNAMES=yes # Enables sentinel hostnames support. This is available only for Redis(R) 6.2 or higher. Default: no.
      - REDIS_MASTER_HOST=redis-master # Host of the Redis(R) master to monitor. Default: redis.
#      - REDIS_MASTER_PORT_NUMBER=16379 # Port of the Redis(R) master to monitor. Default: 6379.
      - REDIS_SENTINEL_QUORUM=2 # Number of Sentinels that need to agree about the fact the master is not reachable. Default: 2.
#      - REDIS_MASTER_PASSWORD=bitnami # Password to authenticate with the master. No defaults. As an alternative, you can mount a file with the password and set the REDIS_MASTER_PASSWORD_FILE variable.
      - REDIS_MASTER_SET=master-node # Name of the set of Redis(R) instances to monitor. Default: mymaster.
#      - REDIS_MASTER_USER=bitnami # Username to authenticate with when ACL is enabled for the master. No defaults. This is available only for Redis(R) 6 or higher. If not specified, Redis(R) Sentinel will try to authenticate with just the password (using sentinel auth-pass <master-name> <password>).
      #- REDIS_SENTINEL_PORT_NUMBER=26379 #Redis(R) Sentinel port. Default: 26379.
      #- REDIS_SENTINEL_PASSWORD=bitnami # Password to authenticate with this sentinel and to authenticate to other sentinels. No defaults. Needs to be identical on all sentinels. As an alternative, you can mount a file with the password and set the REDIS_SENTINEL_PASSWORD_FILE variable.
      - REDIS_SENTINEL_DOWN_AFTER_MILLISECONDS=5000 # Number of milliseconds before master is declared down. Default: 60000.
      - REDIS_SENTINEL_FAILOVER_TIMEOUT=60000 # Specifies the failover timeout in milliseconds. Default: 180000.
      - REDIS_SENTINEL_TLS_ENABLED=no # Whether to enable TLS for traffic or not. Default: no.
        #- REDIS_SENTINEL_TLS_PORT_NUMBER: Port used for TLS secure traffic. Default: 26379.
        #- REDIS_SENTINEL_TLS_CERT_FILE: File containing the certificate file for the TLS traffic. No defaults.
        #- REDIS_SENTINEL_TLS_KEY_FILE: File containing the key for certificate. No defaults.
        #- REDIS_SENTINEL_TLS_CA_FILE: File containing the CA of the certificate. No defaults.
        #- REDIS_SENTINEL_TLS_DH_PARAMS_FILE: File containing DH params (in order to support DH based ciphers). No defaults.
        #- REDIS_SENTINEL_TLS_AUTH_CLIENTS:
        #-   Whether to require clients to authenticate or not. Default: yes.
#      - REDIS_SENTINEL_ANNOUNCE_IP=127.0.0.1 # Use the specified IP address in the HELLO messages used to gossip its presence. Default: auto-detected local address.
#      - REDIS_SENTINEL_ANNOUNCE_PORT=26379 # Use the specified port in the HELLO messages used to gossip its presence.

networks:
  reddis:
    driver: bridge

volumes:
  redis:
    driver: local
